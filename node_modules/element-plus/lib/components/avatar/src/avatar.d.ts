import type { ExtractPropTypes } from 'vue';
export declare const avatarProps: {
    readonly size: {
        readonly type: import("vue").PropType<number | "small" | "large" | "medium">;
        readonly required: boolean;
        readonly default: "large";
        readonly validator: (val: unknown) => boolean;
    };
    readonly shape: {
        readonly type: import("vue").PropType<"circle" | "square">;
        readonly required: boolean;
        readonly default: "circle";
        readonly validator: (val: unknown) => boolean;
    };
    readonly icon: StringConstructor;
    readonly src: {
        readonly type: StringConstructor;
        readonly default: "";
    };
    readonly alt: StringConstructor;
    readonly srcSet: StringConstructor;
    readonly fit: {
        readonly type: import("vue").PropType<import("csstype").ObjectFitProperty>;
        readonly required: boolean;
        readonly default: import("csstype").ObjectFitProperty;
        readonly validator: (val: unknown) => boolean;
    };
};
export declare type AvatarProps = ExtractPropTypes<typeof avatarProps>;
export declare const avatarEmits: {
    error: (evt: Event) => boolean;
};
export declare type AvatarEmits = typeof avatarEmits;
